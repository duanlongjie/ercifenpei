<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.domain.Student">
    <constructor>
      <idArg column="student_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="student_name" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    student_id, password, student_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where student_id = #{studentId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.domain.Student">
    insert into student (student_id, password, student_name
      )
    values (#{studentId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.domain.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.domain.Student">
    update student
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.domain.Student">
    update student
    set password = #{password,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR}
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.domain.Student">
    <constructor>
      <idArg column="student_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="student_name" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    student_id, password, student_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where student_id = #{studentId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.domain.Student">
    insert into student (student_id, password, student_name
      )
    values (#{studentId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.domain.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.domain.Student">
    update student
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.domain.Student">
    update student
    set password = #{password,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR}
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.domain.Student">
    <constructor>
      <idArg column="student_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="student_name" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    student_id, password, student_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where student_id = #{studentId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.domain.Student">
    insert into student (student_id, password, student_name
      )
    values (#{studentId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.domain.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.domain.Student">
    update student
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.domain.Student">
    update student
    set password = #{password,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR}
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
  <resultMap id="BaseResultMap" type="com.domain.Student">
    <constructor>
      <idArg column="student_id" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="password" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="student_name" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    student_id, password, student_name
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where student_id = #{studentId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where student_id = #{studentId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.domain.Student">
    insert into student (student_id, password, student_name
      )
    values (#{studentId,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{studentName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.domain.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        student_id,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="studentName != null">
        student_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="studentId != null">
        #{studentId,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        #{studentName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.domain.Student">
    update student
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="studentName != null">
        student_name = #{studentName,jdbcType=VARCHAR},
      </if>
    </set>
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.domain.Student">
    update student
    set password = #{password,jdbcType=VARCHAR},
      student_name = #{studentName,jdbcType=VARCHAR}
    where student_id = #{studentId,jdbcType=VARCHAR}
  </update>
</mapper>